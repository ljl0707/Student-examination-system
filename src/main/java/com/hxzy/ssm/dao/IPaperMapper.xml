<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 表示使用具体的接口，必须添加 -->
<mapper namespace="com.hxzy.ssm.dao.IPaperMapper">
    <!-- 开启了二级缓存 -->
<!--     <cache/> -->
    
    <!-- 增加 -->
    <insert id="add" parameterType="Paper">
        insert into t_paper (pname,ptimes,statime,qids,status,url)
        values (#{pname,jdbcType=VARCHAR},#{ptimes,jdbcType=NUMERIC},#{statime,jdbcType=DATE},#{qids,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR},#{url,jdbcType=VARCHAR})
    </insert>
    <!-- 修改 -->
    <update id="update" parameterType="Paper">
         update t_paper t
         <set>
            <if test="pname!=null and pname!=''">
               t.pname=#{pname},
            </if>
            <if test="ptimes>0">
               t.ptimes=#{ptimes},
            </if>
            <if test="statime!=null">
               t.statime=#{statime},
            </if>
            <if test="status!=null and status!='' ">
               t.status=#{status},
            </if>
            <if test="url!=null and url!='' ">
               t.url=#{url}
            </if>
         </set>
          where t.pid=#{pid}
    </update>
    <!-- 删除 -->
    <delete id="del" parameterType="string">
        delete from t_Paper where id=#{id}
    </delete>
    
    <!-- 批量删除 -->
    <delete id="delMore" parameterType="map">
<!--         delete from t_Paper where id in (${ids}) -->
        delete from t_paper where pid in 
        <!-- 
         key(键)ids  对应的值 必须是数组或list集合
         -->
        <foreach collection="ids" item="id" open="(" separator="," close=")">
           #{id}
        </foreach> 
    </delete>
    
    <!-- 查询记录数 -->
    <select id="count" parameterType="map" resultType="int">
        select count(*) count from t_paper t where 1=1
        <include refid="whereSql"/>
    </select>
    
    <select id="query" parameterType="Map" resultType="Paper">
         select t.pid,t.pname,t.ptimes,t.statime,t.status,t.url,t.qids from t_paper t  where 1=1
         <include refid="whereSql"/>
         limit #{skipnum},#{pagesize}
    </select>
    
    <sql id="whereSql">
        <if test="name!=null and name!='' ">
            and t.pname like '%${name}%'
        </if>
        <if test="isvalid!=null and isvalid!='' ">
            and t.status=#{isvalid}
        </if>
        <if test="stime!=null and stime!='' ">
            and t.statime <![CDATA[>=]]> str_to_date(#{stime},'%Y/%m/%d %H:%i')
        </if>
        <if test="etime!=null and etime!='' ">
            and t.statime <![CDATA[<=]]> str_to_date(#{etime},'%Y/%m/%d %H:%i')
        </if>
    </sql>
    
    <!-- 通过ID，查询一条数据 -->
    <select id="getObjById" parameterType="string" resultType="Paper">
         select t.pid,t.pname,t.ptimes,t.statime,t.status,t.url from t_paper t where t.pid=#{0}
    </select>
    
    <!-- 生成试卷 -->
    <select id="creatPaper" parameterType="map" resultType="Question">
        select a.* from (
			select t.id,t.qname,t.qscore,m.typename qtype from t_question t 
			left join t_type m on t.qtype=m.typeid and m.type=0
			where t.qtype='1'
			and t.qstage=#{stage} and t.qcourse=#{course} ORDER BY RAND() limit #{singlnum}
		) a
		
		union
		
		select b.* from (
			select t.id,t.qname,t.qscore,m.typename qtype from t_question t 
			left join t_type m on t.qtype=m.typeid and m.type=0
			where t.qtype='2'
			and t.qstage=#{stage} and t.qcourse=#{course} ORDER BY RAND() limit #{morenum}
		) b
		
		union
		
		select c.* from (
			select t.id,t.qname,t.qscore,m.typename qtype from t_question t 
			left join t_type m on t.qtype=m.typeid and m.type=0
			where t.qtype='3'
			and t.qstage=#{stage} and t.qcourse=#{course} ORDER BY RAND() limit #{judgenum}
		) c
    </select>
    <!-- 根据题目id，查询选项 -->
    <select id="getOptionsByQid" parameterType="int" resultType="Option">
         select t.id,t.opcontent from t_option t where t.qid=#{qid}
    </select>
</mapper>